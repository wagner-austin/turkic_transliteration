[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "turkic-transliterate"
version = "0.1.7"
description = "Deterministic Latin and IPA transliteration for Kazakh, Kyrgyz, plus tokenizer/glue scripts."
authors = [ {name="Austin Wagner", email="awagner@uci.edu"} ]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
keywords = ["kazakh", "kyrgyz", "transliteration", "ipa"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries",
    "Topic :: Text Processing :: Linguistic"
]

dependencies = [
    # Core dependencies (alphabetized)
    "epitran>=1.0,<1.27",           # 1.26.0 is the latest on PyPI
    # Universal fasttext-wheel for all platforms and Python 3.10-3.13
    "fasttext-wheel==0.9.2",
    "numpy<2",
    "packaging>=23.0",              # Used in tests/test_fasttext.py
    "panphon>=0.20,<0.22",          # 0.21.2 is the newest published wheel
    # PyICU is required, but Windows users must install the correct wheel manually. See README and turkic-pyicu-install for help.
    "PyICU>=2.15",
    "pytest>=8.0",                  # Test runner
    "rapidfuzz>=3.5",
    "rich>=13.7",                   # Color-aware logging and console output
    "sentencepiece>=0.2.0",
    "click>=8.1",
    "types-requests>=2.31",
    "datasets>=2.20",
    "evaluate>=0.4",             # PPL metric
    "accelerate>=0.28",          # HF Trainer device dispatch
    "transformers>=4.41,<5",        # mGPT / BLOOM causal LM
    "tqdm>=4.66",                # progress bars for LM utilities
    "scikit-learn>=1.4",        # cosine similarity utilities
    "typing_extensions>=4.12",    # for Never on Python â‰¤3.11
]

[project.optional-dependencies]
examples = [
    "flask",
    "streamlit",
    "jupyterlab",
]
winlid = []
corpus = [
    "datasets>=2.20",
    "pyarrow>=14.0",
    "requests>=2.0",
]

# Development tools
dev = [
    "black>=23.0",         # Code formatter
    "ruff>=0.2.0",         # Fast linter
    "mypy>=1.0",           # Type checker
    "pytest>=8.0",         # Testing framework
    "build>=1.0",          # Package builder
    "twine>=4.0",          # Package uploader
    "make>=0.1.6",         # Make command for Windows
    "types-requests>=2.31", # Type stubs for requests
]
# User interface dependencies
ui = [
    "gradio>=4.0",
    "pandas",
    "matplotlib>=3.9",           # cosine-similarity heat-map
]

[project.scripts]
turkic-translit = "turkic_translit.cli:main"
turkic-pyicu-install = "turkic_translit.cli.pyicu_install:main"
turkic-filter-russian = "turkic_translit.cli.filter_russian:main"
turkic-download-corpus = "turkic_translit.cli.download_corpus:cli"
turkic-build-spm = "turkic_translit.cli.build_spm:main"
turkic-leven = "turkic_translit.cli.run_leven:main"
turkic-web = "turkic_translit.web.web_demo:main"
turkic-train-lm = "turkic_translit.cli.train_lm:cli"
turkic-eval-lm  = "turkic_translit.cli.eval_lm:cli"


[tool.setuptools.packages]
find = { where = ["src"] }

[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"turkic_translit" = ["rules/*.rules"]
"turkic_translit.cli" = ["corpora.yaml"]

[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests", "examples"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "PIE", # flake8-pie
]
ignore = [
    "E501"  # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["turkic_translit"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/*" = ["E731"]      # do not assign a lambda expression
"examples/*" = ["E402"]   # module level import not at top of file
